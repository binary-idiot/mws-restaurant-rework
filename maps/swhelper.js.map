{"version":3,"sources":["swhelper.js"],"names":["SWHelper","[object Object]","navigator","serviceWorker","register","then","reg","console","log","controller","waiting","updateReady","installing","trackInstalling","addEventListener","window","location","reload","worker","state","dialog","document","getElementById","buttons","getElementsByTagName","button","e","this","onClick","classList","remove","focus","target","value","postMessage","action","add"],"mappings":"AAAA,MAAMA,SAEJC,+BACMC,UAAUC,gBAEdD,UAAUC,cAAcC,SAAS,UAAUC,KAAMC,IAI7C,GAFAC,QAAQC,IAAI,eAERN,UAAUC,cAAcM,WAE5B,OAAGH,EAAII,SACLH,QAAQC,IAAI,gBACZG,YAAYL,EAAII,UAIfJ,EAAIM,YACLL,QAAQC,IAAI,mBACZK,gBAAgBP,EAAIM,kBAItBN,EAAIQ,iBAAiB,cAAe,KAClCD,gBAAgBP,EAAIM,gBAI1BV,UAAUC,cAAcW,iBAAiB,mBAAoB,KAC3DC,OAAOC,SAASC,aAKtBJ,gBAAkBK,CAAAA,IAChBX,QAAQC,IAAI,YACZU,EAAOJ,iBAAiB,cAAe,KAClB,aAAhBI,EAAOC,OACRR,YAAYO,OAKlBP,YAAcO,CAAAA,IACZX,QAAQC,IAAI,gBACZ,MAAMY,EAASC,SAASC,eAAe,kBACjCC,EAAUH,EAAOI,qBAAqB,UAC5C,IAAI,IAAIC,KAAUF,EAChBE,EAAOX,iBAAiB,QAASY,IAAMC,KAAKC,QAAQF,EAAGR,KAEzDE,EAAOS,UAAUC,OAAO,UACxBT,SAASC,eAAe,iBAAiBO,UAAUC,OAAO,UAC1DT,SAASC,eAAe,kBAAkBS,UAG5CH,QAAU,EAACF,EAAGR,KACU,YAAnBQ,EAAEM,OAAOC,MACVf,EAAOgB,YAAY,CAACC,OAAQ,gBAE5Bd,SAASC,eAAe,kBAAkBO,UAAUO,IAAI,UACxDf,SAASC,eAAe,iBAAiBO,UAAUO,IAAI","file":"../js/swhelper.js","sourcesContent":["class SWHelper {\r\n\r\n  static registerServiceWorker() {\r\n    if(!navigator.serviceWorker) return;\r\n\r\n    navigator.serviceWorker.register('/sw.js').then( reg => {\r\n\r\n        console.log('Registered!');\r\n\r\n        if(!navigator.serviceWorker.controller) return;\r\n\r\n        if(reg.waiting){\r\n          console.log('Waiting')\r\n          updateReady(reg.waiting);\r\n          return;\r\n        }\r\n\r\n        if(reg.installing){\r\n          console.log('Installing')\r\n          trackInstalling(reg.installing);\r\n          return;\r\n        }\r\n\r\n        reg.addEventListener('updatefound', () =>{\r\n          trackInstalling(reg.installing);\r\n        })\r\n    });\r\n    \r\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n      window.location.reload();\r\n    });\r\n  }\r\n}\r\n\r\ntrackInstalling = worker =>{\r\n  console.log('tracking');\r\n  worker.addEventListener('statechange', () =>{\r\n    if(worker.state == 'installed'){\r\n      updateReady(worker);\r\n    }\r\n  });\r\n}\r\n\r\nupdateReady = worker => {\r\n  console.log(\"Update Ready\");\r\n  const dialog = document.getElementById('refresh-dialog');\r\n  const buttons = dialog.getElementsByTagName('button');\r\n  for(let button of buttons){\r\n    button.addEventListener('click', e => {this.onClick(e, worker)})\r\n  }\r\n  dialog.classList.remove('hidden');\r\n  document.getElementById('dialog-spacer').classList.remove('hidden');\r\n  document.getElementById('refresh-button').focus();\r\n}\r\n\r\nonClick = (e, worker) => {\r\n  if(e.target.value === 'refresh')\r\n    worker.postMessage({action: 'skipWaiting'})\r\n  else\r\n    document.getElementById('refresh-dialog').classList.add('hidden');\r\n    document.getElementById('dialog-spacer').classList.add('hidden');\r\n}"]}