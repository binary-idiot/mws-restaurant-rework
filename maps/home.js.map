{"version":3,"sources":["home.js"],"names":["restaurants","neighborhoods","cuisines","worker","document","addEventListener","event","this","Worker","onmessage","handleWorkerMessage","updateRestaurants","getNeighborhoodsAndCuisines","msg","data","content","msgData","retrieved","self","requestAnimationFrame","fillRestaurantsHTML","fillNeighborhoodHTML","fillCuisineHTML","getRestaurants","filter","postMessage","action","cSelect","getElementById","nSelect","cIndex","selectedIndex","nIndex","cuisine","value","neighborhood","select","option","createElement","innerHTML","append","ul","restaurant","resetRestaurants","createRestaurantHTML","li","image","imgSrc","Helper","imageUrlForRestaurant","className","src","srcset","sizes","alt","name","address","adr","replace","more","href","urlForRestaurant","setAttribute"],"mappings":"AAAA,IAAIA,YACHC,cACAC,SACAC,OAEAC,SAASC,iBAAiB,mBAAoBC,IAE7CC,KAAKJ,OAAS,IAAIK,OAAO,0BACzBD,KAAKJ,OAAOM,UAAYC,oBACxBC,oBACAC,gCAOFF,oBAAsBG,CAAAA,IACrB,MAAMC,EAAOD,EAAIC,KACXC,EAAUD,EAAKE,QAErB,OAAOF,EAAKG,WACX,IAAK,cACJC,KAAKlB,YAAce,EACnBI,sBAAsBC,qBAEtB,MACD,IAAK,2BACJF,KAAKjB,cAAgBc,EAAQd,cAC7BkB,sBAAsBE,sBACtBH,KAAKhB,SAAWa,EAAQb,SACxBiB,sBAAsBG,oBAUzBC,eAAiB,EAACC,EAAQrB,EAASI,KAAKJ,UACvCA,EAAOsB,YAAY,CAACC,OAAQ,iBAAkBF,OAAQA,MAOvDZ,4BAA8B,EAACT,EAASI,KAAKJ,UAC5CA,EAAOsB,YAAY,CAACC,OAAQ,kCAM7Bf,kBAAoB,MACnB,MAAMgB,EAAUvB,SAASwB,eAAe,mBAClCC,EAAUzB,SAASwB,eAAe,wBAElCE,EAASH,EAAQI,cACjBC,EAASH,EAAQE,cAEjBE,EAAUN,EAAQG,GAAQI,MAC1BC,EAAeN,EAAQG,GAAQE,MAErCX,eAAe,CAACY,aAAcA,EAAcF,QAASA,MAMtDZ,qBAAuB,MACtB,MAAMe,EAAShC,SAASwB,eAAe,wBACvC,IAAIO,gBAAgBjB,KAAKjB,cAAc,CACtC,MAAMoC,EAASjC,SAASkC,cAAc,UACtCD,EAAOE,UAAYJ,aACnBE,EAAOH,MAAQC,aACfC,EAAOI,OAAOH,MAOhBf,gBAAkB,MACjB,MAAMc,EAAShC,SAASwB,eAAe,mBACvC,IAAIK,WAAWf,KAAKhB,SAAS,CAC5B,MAAMmC,EAASjC,SAASkC,cAAc,UACtCD,EAAOE,UAAYN,QACnBI,EAAOH,MAAQD,QACfG,EAAOI,OAAOH,MAOhBjB,oBAAsB,MACrB,MAAMqB,EAAKrC,SAASwB,eAAe,oBAGnC,IAAIc,cAFJC,iBAAiBF,GAECvB,KAAKlB,aACtByC,EAAGD,OAAOI,qBAAqBF,eAOjCC,iBAAmBF,CAAAA,IAClBA,EAAGF,UAAY,KAWhBK,qBAAuBF,CAAAA,IACtB,MAAMG,EAAKzC,SAASkC,cAAc,MAE5BQ,EAAQ1C,SAASkC,cAAc,OAC/BS,EAASC,OAAOC,sBAAsBP,GAC5CI,EAAMI,UAAY,iBAClBJ,EAAMK,OAAUJ,cAChBD,EAAMM,UAAaL,qBAA4BA,sBAA6BA,mBAC5ED,EAAMO,MAAQ,4DACdP,EAAMQ,IAAMZ,EAAWY,IACvBT,EAAGL,OAAOM,GAEV,MAAMS,EAAOnD,SAASkC,cAAc,MACpCiB,EAAKhB,UAAYG,EAAWa,KAC5BV,EAAGL,OAAOe,GAEV,MAAMpB,EAAe/B,SAASkC,cAAc,KAC5CH,EAAaI,UAAYG,EAAWP,aACpCU,EAAGL,OAAOL,GAEV,MAAMqB,EAAUpD,SAASkC,cAAc,KACjCmB,EAAMf,EAAWc,QAAQE,QAAQ,IAAK,SAC5CF,EAAQjB,UAAYkB,EACpBZ,EAAGL,OAAOgB,GAEV,MAAMG,EAAOvD,SAASkC,cAAc,KAMpC,OALAqB,EAAKpB,UAAY,eACjBoB,EAAKC,KAAOZ,OAAOa,iBAAiBnB,GACpCiB,EAAKG,aAAa,OAAQ,UAC1BjB,EAAGL,OAAOmB,GAEHd","file":"../js/home.js","sourcesContent":["let restaurants,\r\n\tneighborhoods,\r\n\tcuisines,\r\n\tworker;\r\n\r\n\tdocument.addEventListener('DOMContentLoaded', event => {\r\n\t\t// worker to handle all restaurant retrieval\r\n\t\tthis.worker = new Worker('js/restaurantWorker.js');\r\n\t\tthis.worker.onmessage = handleWorkerMessage;\r\n\t\tupdateRestaurants();\r\n\t\tgetNeighborhoodsAndCuisines();\r\n\t});\r\n\r\n/**\r\n * Handle messages from worker thread\r\n * @param  {Message} msg Message from worker\r\n */\r\nhandleWorkerMessage = msg => {\r\n\tconst data = msg.data;\r\n\tconst content = data.msgData;\r\n\r\n\tswitch(data.retrieved){\r\n\t\tcase 'restaurants':\r\n\t\t\tself.restaurants = content;\r\n\t\t\trequestAnimationFrame(fillRestaurantsHTML);\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'neighborhoodsAndCuisines':\r\n\t\t\tself.neighborhoods = content.neighborhoods;\r\n\t\t\trequestAnimationFrame(fillNeighborhoodHTML);\r\n\t\t\tself.cuisines = content.cuisines;\r\n\t\t\trequestAnimationFrame(fillCuisineHTML);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n/**\r\n * Have the worker retrieve restaurants based on filter criteria\r\n * @param {RestaurantWorker} worker worker to handle request\r\n * @param {Json} filter criteria to filter restaurants by\r\n */\r\ngetRestaurants = (filter, worker = this.worker) => {\r\n\tworker.postMessage({action: 'getRestaurants', filter: filter});\r\n}\r\n\r\n/**\r\n * Have the worker retrieve all neighborhoods and cuisines\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ngetNeighborhoodsAndCuisines = (worker = this.worker) => {\r\n\tworker.postMessage({action: 'getNeighborhoodsAndCuisines'});\r\n}\r\n\r\n/**\r\n * Send selected neighborhood and cuisine to getRestaurants()\r\n */\r\nupdateRestaurants = () => {\r\n\tconst cSelect = document.getElementById('cuisines-select');\r\n\tconst nSelect = document.getElementById('neighborhoods-select');\r\n\r\n\tconst cIndex = cSelect.selectedIndex;\r\n\tconst nIndex = nSelect.selectedIndex;\r\n\r\n\tconst cuisine = cSelect[cIndex].value;\r\n\tconst neighborhood = nSelect[nIndex].value;\r\n\r\n\tgetRestaurants({neighborhood: neighborhood, cuisine: cuisine});\r\n}\r\n\r\n/**\r\n * Fill neighborhoods-select with retrieved neighborhoods\r\n */\r\nfillNeighborhoodHTML = () => {\r\n\tconst select = document.getElementById('neighborhoods-select');\r\n\tfor(neighborhood of self.neighborhoods){\r\n\t\tconst option = document.createElement('option');\r\n\t\toption.innerHTML = neighborhood;\r\n\t\toption.value = neighborhood;\r\n\t\tselect.append(option);\r\n\t}\r\n}\r\n\r\n/**\r\n * Fill cuisines-select with retrieved cuisines\r\n */\r\nfillCuisineHTML = () => {\r\n\tconst select = document.getElementById('cuisines-select');\r\n\tfor(cuisine of self.cuisines){\r\n\t\tconst option = document.createElement('option');\r\n\t\toption.innerHTML = cuisine;\r\n\t\toption.value = cuisine;\r\n\t\tselect.append(option);\r\n\t}\r\n}\r\n\r\n/**\r\n * Fill restaurants-list with retrieved restaurants\r\n */\r\nfillRestaurantsHTML = () => {\r\n\tconst ul = document.getElementById('restaurants-list');\r\n\tresetRestaurants(ul);\r\n\r\n\tfor(restaurant of self.restaurants)\r\n\t\tul.append(createRestaurantHTML(restaurant));\r\n\t// map markers\r\n}\r\n\r\n/**\r\n * Clear existing restaurants from page\r\n */\r\nresetRestaurants = ul => {\r\n\tul.innerHTML = '';\r\n\r\n\t// map markers\r\n\t\r\n}\r\n\r\n/**\r\n * Create a li for a restaurant\r\n * @param  {Json} restaurant Restaurant to create\r\n * @return {HTML}            li for restaurant\r\n */\r\ncreateRestaurantHTML = restaurant => {\r\n\tconst li = document.createElement('li');\r\n\r\n\tconst image = document.createElement('img');\r\n\tconst imgSrc = Helper.imageUrlForRestaurant(restaurant); \r\n\timage.className = 'restaurant-img';\r\n\timage.src = `${ imgSrc }-small.jpg`;\r\n\timage.srcset = `${ imgSrc }-small.jpg 300w, ${ imgSrc }-medium.jpg 600w, ${ imgSrc }-large.jpg 800w`;\r\n\timage.sizes = '(max-width: 424px) 300px, (max-width: 573px) 449px, 300px';\r\n\timage.alt = restaurant.alt;\r\n\tli.append(image);\r\n\r\n\tconst name = document.createElement('h2');\r\n\tname.innerHTML = restaurant.name;\r\n\tli.append(name);\r\n\r\n\tconst neighborhood = document.createElement('p');\r\n\tneighborhood.innerHTML = restaurant.neighborhood;\r\n\tli.append(neighborhood);\r\n\r\n\tconst address = document.createElement('p');\r\n\tconst adr = restaurant.address.replace(/,/, ',<br>');\r\n\taddress.innerHTML = adr;\r\n\tli.append(address);\r\n\r\n\tconst more = document.createElement('a');\r\n\tmore.innerHTML = 'View Details';\r\n\tmore.href = Helper.urlForRestaurant(restaurant);\r\n\tmore.setAttribute('role', 'button')\r\n\tli.append(more)\r\n\r\n\treturn li\r\n}"]}