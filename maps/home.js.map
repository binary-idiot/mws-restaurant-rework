{"version":3,"sources":["home.js"],"names":["restaurants","neighborhoods","cuisines","worker","newMap","markers","document","addEventListener","event","SWHelper","registerServiceWorker","this","Worker","onmessage","handleWorkerMessage","requestAnimationFrame","initMap","updateRestaurants","getNeighborhoodsAndCuisines","msg","data","content","msgData","retrieved","addRestaurants","fillRestaurantsHTML","self","fillNeighborhoodHTML","fillCuisineHTML","registerSync","navigator","serviceWorker","ready","then","reg","sync","register","catch","error","console","L","map","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","tileSize","maxZoom","zoomOffset","attribution","id","addTo","getRestaurants","filter","postMessage","action","toggleFavorite","restaurant","state","is_favorite","newRestaurants","newRestaurant","restaurantFound","index","entries","push","resetRestaurants","cSelect","getElementById","nSelect","cIndex","selectedIndex","nIndex","cuisine","value","neighborhood","select","option","createElement","innerHTML","append","ul","createRestaurantHTML","addMarkersToMap","marker","remove","li","image","imgSrc","Helper","imageUrlForRestaurant","className","src","srcset","sizes","alt","titleContainer","classList","add","name","fav","onclick","e","setAttribute","log","address","adr","replace","more","href","urlForRestaurant","mapMarkerForRestaurant","on","window","location","options","url"],"mappings":"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","file":"../js/home.js","sourcesContent":["let restaurants,\r\n\tneighborhoods,\r\n\tcuisines,\r\n\tworker;\r\n\r\nvar newMap;\r\nvar markers = [];\r\n\r\n\tdocument.addEventListener('DOMContentLoaded', event => {\r\n\t\tSWHelper.registerServiceWorker();\r\n\r\n\t\t// worker to handle all restaurant retrieval\r\n\t\tthis.worker = new Worker('js/restaurantWorker.js');\r\n\t\tthis.worker.onmessage = handleWorkerMessage;\r\n\t\trequestAnimationFrame(initMap);\r\n\t\tupdateRestaurants();\r\n\t\tgetNeighborhoodsAndCuisines();\r\n\t});\r\n\r\n/**\r\n * Handle messages from worker thread\r\n * @param  {Message} msg Message from worker\r\n */\r\nhandleWorkerMessage = msg => {\r\n\tconst data = msg.data;\r\n\tconst content = data.msgData;\r\n\r\n\tswitch(data.retrieved){\r\n\t\tcase 'restaurants':\r\n\t\t\taddRestaurants(content);\r\n\t\t\trequestAnimationFrame(fillRestaurantsHTML);\r\n\t\t\tbreak;\r\n\t\tcase 'neighborhoodsAndCuisines':\r\n\t\t\tself.neighborhoods = content.neighborhoods;\r\n\t\t\trequestAnimationFrame(fillNeighborhoodHTML);\r\n\t\t\tself.cuisines = content.cuisines;\r\n\t\t\trequestAnimationFrame(fillCuisineHTML);\r\n\t\t\tbreak;\r\n\t\tcase 'favorited':\r\n\t\t\tif(!content)\r\n\t\t\t\tregisterSync();\r\n\t\t\tupdateRestaurants();\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n/**\r\n\t * Register serviceWorker sync event\r\n\t * @return {Promise} Resolves if registration is successful\r\n\t */\r\n\tregisterSync = () =>{\r\n\t\tnavigator.serviceWorker.ready.then(reg => {\r\n\t\t\treturn reg.sync.register('syncReviews')\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n\t}\r\n\r\n/**\r\n * Initialize mapbox map\r\n */\r\ninitMap = () => {\r\n\tself.newMap = L.map('map', {\r\n\t    center: [40.722216, -73.987501],\r\n\t    zoom: 12,\r\n\t    scrollWheelZoom: false\r\n\t  });\r\n\tL.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={mapboxToken}', {\r\n\tmapboxToken: 'pk.eyJ1IjoiYmluYXJ5aWRpb3QiLCJhIjoiY2traXBrb3doMHNleDJ2b2RkNG92ajVoMCJ9.G13Ie3WgGMKry_OYHfROng',\r\n\ttileSize: 512,\r\n\tmaxZoom: 18,\r\n\tzoomOffset: -1,\r\n\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n\t  '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n\t  'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n\tid: 'mapbox.streets'\r\n\t}).addTo(newMap);\r\n}\r\n\r\n/**\r\n * Have the worker retrieve restaurants based on filter criteria\r\n * @param {RestaurantWorker} worker worker to handle request\r\n * @param {Json} filter criteria to filter restaurants by\r\n */\r\ngetRestaurants = (filter, worker = this.worker) => {\r\n\tworker.postMessage({action: 'getRestaurants', filter: filter});\r\n}\r\n\r\n/**\r\n * Have the worker retrieve all neighborhoods and cuisines\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ngetNeighborhoodsAndCuisines = (worker = this.worker) => {\r\n\tworker.postMessage({action: 'getNeighborhoodsAndCuisines'});\r\n}\r\n\r\n/**\r\n * Have the worker set favorite to the other state \r\n * @param  {Json} restaurant The restaurant to (un)favorite\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ntoggleFavorite = (restaurant, worker = this.worker) => {\r\n\tlet state = false;\r\n\tif(restaurant.is_favorite == false || restaurant.is_favorite == \"false\")\r\n\t\tstate = true;\r\n\tworker.postMessage({action: 'setFavorite', id:restaurant.id, state:state});\r\n}\r\n\r\n/**\r\n * Add or update self.restaurants\r\n * @param  {Json} newRestaurants Restaurants to add\r\n */\r\naddRestaurants = newRestaurants => {\r\n\r\n\tfor(newRestaurant of newRestaurants){\r\n\t\tlet restaurantFound = false;\r\n\r\n\t\t// if restaurant is already in self.restaurants then update it otherwise add it to the list;\r\n\t\tfor([index, restaurant] of self.restaurants.entries()){\r\n\t\t\tif(restaurant.id == newRestaurant.id){\r\n\t\t\t\trestaurantFound = true;\r\n\t\t\t\tself.restaurants[index] = newRestaurant;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!restaurantFound){\r\n\t\t\tself.restaurants.push(newRestaurant);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Send selected neighborhood and cuisine to getRestaurants()\r\n */\r\nupdateRestaurants = () => {\r\n\tresetRestaurants();\r\n\r\n\tconst cSelect = document.getElementById('cuisines-select');\r\n\tconst nSelect = document.getElementById('neighborhoods-select');\r\n\r\n\tconst cIndex = cSelect.selectedIndex;\r\n\tconst nIndex = nSelect.selectedIndex;\r\n\r\n\tconst cuisine = cSelect[cIndex].value;\r\n\tconst neighborhood = nSelect[nIndex].value;\r\n\r\n\tgetRestaurants({neighborhood: neighborhood, cuisine: cuisine});\r\n}\r\n\r\n/**\r\n * Fill neighborhoods-select with retrieved neighborhoods\r\n */\r\nfillNeighborhoodHTML = () => {\r\n\tconst select = document.getElementById('neighborhoods-select');\r\n\tfor(neighborhood of self.neighborhoods){\r\n\t\tconst option = document.createElement('option');\r\n\t\toption.innerHTML = neighborhood;\r\n\t\toption.value = neighborhood;\r\n\t\tselect.append(option);\r\n\t}\r\n}\r\n\r\n/**\r\n * Fill cuisines-select with retrieved cuisines\r\n */\r\nfillCuisineHTML = () => {\r\n\tconst select = document.getElementById('cuisines-select');\r\n\tfor(cuisine of self.cuisines){\r\n\t\tconst option = document.createElement('option');\r\n\t\toption.innerHTML = cuisine;\r\n\t\toption.value = cuisine;\r\n\t\tselect.append(option);\r\n\t}\r\n}\r\n\r\n/**\r\n * Fill restaurants-list with retrieved restaurants\r\n */\r\nfillRestaurantsHTML = () => {\r\n\tconst ul = document.getElementById('restaurants-list');\r\n\r\n\tfor(restaurant of self.restaurants)\r\n\t\tul.append(createRestaurantHTML(restaurant));\r\n\taddMarkersToMap();\r\n}\r\n\r\n/**\r\n * Clear existing restaurants from page\r\n */\r\nresetRestaurants = () => {\r\n\tself.restaurants = [];\r\n\r\n\tconst ul = document.getElementById('restaurants-list');\r\n\tul.innerHTML = '';\r\n\r\n\tif(self.markers){\r\n\t\tfor(marker of self.markers)\r\n\t\t\tmarker.remove();\r\n\t}\r\n\tself.markers = [];\r\n\t\r\n}\r\n\r\n/**\r\n * Create a li for a restaurant\r\n * @param  {Json} restaurant Restaurant to create\r\n * @return {HTML}            li for restaurant\r\n */\r\ncreateRestaurantHTML = restaurant => {\r\n\tconst li = document.createElement('li');\r\n\r\n\tconst image = document.createElement('img');\r\n\tconst imgSrc = Helper.imageUrlForRestaurant(restaurant); \r\n\timage.className = 'restaurant-img';\r\n\timage.src = `${ imgSrc }-small.jpg`;\r\n\timage.srcset = `${ imgSrc }-small.jpg 300w, ${ imgSrc }-medium.jpg 600w, ${ imgSrc }-large.jpg 800w`;\r\n\timage.sizes = '(max-width: 424px) 300px, (max-width: 573px) 449px, 300px';\r\n\timage.alt = restaurant.alt;\r\n\tli.append(image);\r\n\r\n\r\n\tconst titleContainer = document.createElement('div');\r\n\ttitleContainer.classList.add('restaurant-container');\r\n\r\n\tconst name = document.createElement('h2');\r\n\tname.innerHTML = restaurant.name;\r\n\ttitleContainer.append(name);\r\n\r\n\tconst fav = document.createElement('button');\r\n\tfav.innerHTML = 'â';\r\n\tfav.onclick = e => {toggleFavorite(restaurant)};\r\n\tfav.classList.add('fav-button');\r\n\tfav.setAttribute('aria-label', 'Toggle favorite');\r\n\r\n\tconsole.log(`restaurant ${restaurant.id} is ${restaurant.is_favorite}`);\r\n\r\n\tif(restaurant.is_favorite == true || restaurant.is_favorite == \"true\"){\r\n\t\tfav.classList.add('favorited');\r\n\t\tli.setAttribute('aria-label', 'Favorite Restaurant');\r\n\t}else{\r\n\t\tfav.classList.remove('favorited');\r\n\t\tli.setAttribute('aria-label', 'Restaurant');\r\n\t}\r\n\r\n\ttitleContainer.append(fav);\r\n\r\n\tconst neighborhood = document.createElement('p');\r\n\tneighborhood.innerHTML = restaurant.neighborhood;\r\n\ttitleContainer.append(neighborhood);\r\n\r\n\tconst address = document.createElement('p');\r\n\tconst adr = restaurant.address.replace(/,/, ',<br>');\r\n\taddress.innerHTML = adr;\r\n\ttitleContainer.append(address);\r\n\r\n\tli.append(titleContainer);\r\n\r\n\r\n\tconst more = document.createElement('a');\r\n\tmore.innerHTML = 'View Details';\r\n\tmore.href = Helper.urlForRestaurant(restaurant);\r\n\tli.append(more)\r\n\r\n\treturn li\r\n}\r\n\r\n/**\r\n * Add map markers for each restaurant\r\n */\r\naddMarkersToMap = () => {\r\n\tfor(restaurant of self.restaurants) {\r\n\t\tconst marker = Helper.mapMarkerForRestaurant(restaurant, self.newMap);\r\n\t\tmarker.on(\"click\", () => {\r\n\t\t\twindow.location.href = marker.options.url;\r\n\t\t});\r\n\t\tself.markers.push(marker);\r\n\t}\r\n}"]}