{"version":3,"sources":["details.js"],"names":["restaurant","worker","id","reviews","reviewID","newMap","document","addEventListener","event","SWHelper","registerServiceWorker","this","Worker","onmessage","handleWorkerMessage","Number","Helper","getParameterByName","requestAnimationFrame","initReviews","getRestaurant","getReviews","fillFormTitle","msg","data","content","msgData","retrieved","self","initMap","fillBreadcrumb","fillRestaurantHTML","addReviews","resetReviews","notifyUploadSuccess","notifyUploadFail","registerSync","notifyDeleteSuccess","notifyDeleteFail","navigator","serviceWorker","ready","then","reg","sync","register","catch","error","console","L","map","center","latlng","lat","lng","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","addTo","mapMarkerForRestaurant","container","getElementById","title","createElement","innerHTML","insertBefore","firstChild","postMessage","action","createReview","review","updateReview","deleteReview","toggleFavorite","state","is_favorite","getReview","newReviews","newReview","reviewFound","index","entries","push","type","name","fav","onclick","e","classList","add","setAttribute","remove","address","image","imgSrc","imageUrlForRestaurant","className","src","srcset","size","alt","cuisine_type","operating_hours","fillRestaurantHoursHTML","operatingHours","hours","key","row","day","appendChild","time","oh","replace","breadcrumb","li","fillReviewHTML","length","noReviews","nextSibling","nor","removeChild","ul","createReviewHTML","fillReviewForm","value","rating","comments","clearReviewForm","header","date","dateString","Date","updatedAt","toLocaleDateString","year","month","edit","href","urlForRestaurant","confirmDelete","handleFormSubmit","ratingSelect","selectedIndex","restaurant_id","window","location","dialog","buttons","getElementsByTagName","button","target","focus","notifyUpdate","notify"],"mappings":"AAAA,IAAIA,WACHC,OACAC,GACAC,QACAC,SAED,IAAIC,OAEHC,SAASC,iBAAiB,mBAAoBC,IAC7CC,SAASC,wBAETC,KAAKR,QAAU,GAGfQ,KAAKV,OAAS,IAAIW,OAAO,2BACzBD,KAAKV,OAAOY,UAAYC,oBAExBH,KAAKT,GAAKa,OAAOC,OAAOC,mBAAmB,OAC3CN,KAAKP,SAAWW,OAAOC,OAAOC,mBAAmB,WACjDC,sBAAsBC,aACtBC,cAAcT,KAAKT,IACnBmB,WAAWV,KAAKT,IAEhBgB,sBAAsBI,iBAOxBR,oBAAsBS,CAAAA,IACrB,MAAMC,EAAOD,EAAIC,KACXC,EAAUD,EAAKE,QAErB,OAAOF,EAAKG,WACX,IAAK,aACJC,KAAK5B,WAAayB,EACdpB,SACHa,sBAAsBW,SACtBC,kBAEDZ,sBAAsBa,oBACtB,MACD,IAAK,oBACJC,WAAWP,GACXP,sBAAsBe,cACtB,MACD,IAAK,eACDR,GACFP,sBAAsBgB,qBACtBN,KAAKzB,QAAU,GACfkB,WAAWO,KAAK1B,MAEhBgB,sBAAsBiB,kBACtBC,gBAED,MACD,IAAK,SACDX,EACFP,sBAAsBmB,sBAEtBnB,sBAAsBoB,kBACtBF,gBAEDR,KAAKzB,QAAU,GACfkB,WAAWO,KAAK1B,IAChB,MACD,IAAK,YACAuB,GACHW,eACDhB,cAAcQ,KAAK1B,OAStBkC,aAAe,MACdG,UAAUC,cAAcC,MAAMC,KAAKC,GAC3BA,EAAIC,KAAKC,SAAS,gBACvBC,MAAMC,IACRC,QAAQD,MAAMA,OAOhBlB,QAAU,MACT,MAAM7B,EAAa4B,KAAK5B,WACxB4B,KAAKvB,OAAS4C,EAAEC,IAAI,MAAO,CACvBC,OAAQ,CAACnD,EAAWoD,OAAOC,IAAKrD,EAAWoD,OAAOE,KAClDC,KAAM,GACNC,iBAAiB,IAEnBP,EAAEQ,UAAU,oFAAqF,CAC/FC,YAAa,iGACbC,QAAS,GACTC,YAAa,0NAGb1D,GAAI,mBACH2D,MAAMxD,QAETW,OAAO8C,uBAAuBlC,KAAK5B,WAAY4B,KAAKvB,UAMvDc,YAAc,MACb,MAAM4C,EAAYzD,SAAS0D,eAAe,qBACpCC,EAAQ3D,SAAS4D,cAAc,MACrCD,EAAME,UAAY,UAClBJ,EAAUK,aAAaH,EAAOF,EAAUM,cAQzCjD,cAAgB,EAAClB,EAAID,EAAS2B,KAAK3B,UAClCA,EAAOqE,YAAY,CAACC,OAAQ,gBAAiBrE,GAAIA,MAQlDmB,WAAa,EAACnB,EAAID,EAAS2B,KAAK3B,UAC/BA,EAAOqE,YAAY,CAACC,OAAQ,uBAAwBrE,GAAIA,MAQzDsE,aAAe,EAACC,EAAQxE,EAAS2B,KAAK3B,UACrCA,EAAOqE,YAAY,CAACC,OAAQ,eAAgBE,OAAQA,MASrDC,aAAe,EAACxE,EAAIuE,EAAQxE,EAAS2B,KAAK3B,UACzCA,EAAOqE,YAAY,CAACC,OAAQ,eAAgBrE,GAAIA,EAAIuE,OAAQA,MAQ7DE,aAAe,EAACzE,EAAID,EAAS2B,KAAK3B,UACjCA,EAAOqE,YAAY,CAACC,OAAQ,eAAgBrE,GAAIA,MAQjD0E,eAAiB,EAAC5E,EAAYC,EAASU,KAAKV,UAC3C,IAAI4E,GAAQ,EACiB,GAA1B7E,EAAW8E,aAAkD,SAA1B9E,EAAW8E,cAChDD,GAAQ,GACT5E,EAAOqE,YAAY,CAACC,OAAQ,cAAerE,GAAGF,EAAWE,GAAI2E,MAAMA,MAQpEE,UAAY,EAAC7E,EAAK0B,KAAKxB,YACtB,IAAIqE,UAAU7C,KAAKzB,QAClB,GAAGsE,OAAOvE,IAAMa,OAAOb,GACtB,OAAOuE,OAIT,OAAO,OAMRzC,WAAagD,CAAAA,IAEZ,IAAIC,aAAaD,EAAW,CAC3B,IAAIE,GAAc,EAGlB,KAAKC,MAAOV,UAAW7C,KAAKzB,QAAQiF,UACnC,GAAGX,OAAOvE,IAAM+E,UAAU/E,GAAG,CAC5BgF,GAAc,EACdtD,KAAKzB,QAAQgF,OAASF,UACtB,MAIEC,GACHtD,KAAKzB,QAAQkF,KAAKJ,cASrB3D,cAAgB,MACf,MAAM2C,EAAQ3D,SAAS0D,eAAe,cAChCsB,EAAQ1D,KAAa,SAAI,SAAW,SAE1CqC,EAAME,aAAemB,aAQtBvD,mBAAqB,MACpB,MAAM/B,EAAa4B,KAAK5B,WAElB+D,EAAYzD,SAAS0D,eAAe,wBAE7B1D,SAAS0D,eAAe,mBAChCG,UAAYnE,EAAWuF,KAE5B,MAAMC,EAAMlF,SAAS0D,eAAe,qBACpCwB,EAAIC,QAAUC,CAAAA,IAAMd,eAAe5E,KAEN,GAA1BA,EAAW8E,aAAiD,QAA1B9E,EAAW8E,aAC/CU,EAAIG,UAAUC,IAAI,aAClB7B,EAAU8B,aAAa,aAAc,yBAErCL,EAAIG,UAAUG,OAAO,aACrB/B,EAAU8B,aAAa,aAAc,eAGtBvF,SAAS0D,eAAe,sBAChCG,UAAYnE,EAAW+F,QAE/B,MAAMC,EAAQ1F,SAAS0D,eAAe,kBAChCiC,EAAUjF,OAAOkF,sBAAsBlG,GAC7CgG,EAAMG,UAAY,iBAClBH,EAAMI,OAAUH,cAChBD,EAAMK,UAAaJ,qBAA4BA,sBAA6BA,mBAC5ED,EAAMM,KAAO,uDACbN,EAAMO,IAAMvG,EAAWuG,IAEPjG,SAAS0D,eAAe,sBAChCG,UAAYnE,EAAWwG,aAG3BxG,EAAWyG,iBACfC,4BASDA,wBAA0B,EAACC,EAAiB/E,KAAK5B,WAAWyG,mBAC3D,MAAMG,EAAQtG,SAAS0D,eAAe,oBACtC4C,EAAMzC,UAAY,GAClB,IAAK,IAAI0C,KAAOF,EAAgB,CAC/B,MAAMG,EAAMxG,SAAS4D,cAAc,MAE7B6C,EAAMzG,SAAS4D,cAAc,MACnC6C,EAAI5C,UAAY0C,EAChBC,EAAIE,YAAYD,GAEhB,MAAME,EAAO3G,SAAS4D,cAAc,MAC9BgD,EAAKP,EAAeE,GAAKM,QAAQ,IAAK,QAC5CF,EAAK9C,UAAY+C,EACjBJ,EAAIE,YAAYC,GAEhBL,EAAMI,YAAYF,MAQpBhF,eAAiB,MAChB,MAAM9B,EAAa4B,KAAK5B,WAElBoH,EAAa9G,SAAS0D,eAAe,cACrCqD,EAAK/G,SAAS4D,cAAc,MAClCmD,EAAGlD,UAAYnE,EAAWuF,KAC1B6B,EAAWJ,YAAYK,KAMxBC,eAAiB,MAChB,MAAMnH,EAAUyB,KAAKzB,QACf4D,EAAYzD,SAAS0D,eAAe,qBAE1C,GAAsB,GAAlB7D,EAAQoH,OAAa,CACxB,MAAMC,EAAYlH,SAAS4D,cAAc,KAIzC,OAHAsD,EAAUrD,UAAY,kBACtBqD,EAAU3B,aAAa,KAAM,mBAC7B9B,EAAUK,aAAaoD,EAAWzD,EAAUM,WAAWoD,aAGxD,MAAMC,EAAMpH,SAAS0D,eAAe,cACjC0D,GACF3D,EAAU4D,YAAYD,GACvB,MAAME,EAAKtH,SAAS0D,eAAe,gBACnC,IAAIS,UAAUtE,EACbyH,EAAGZ,YAAYa,iBAAiBpD,SAEjCV,EAAUK,aAAawD,EAAI7D,EAAUM,WAAWoD,eAOjDK,eAAiB,MAChB,MAAMrD,EAASM,YACf,GAAGN,EAAO,CACInE,SAAS0D,eAAe,eAChC+D,MAAQtD,EAAOc,KAELjF,SAAS0D,eAAe,iBAChC+D,MAAQtD,EAAOuD,OAEL1H,SAAS0D,eAAe,mBAChC+D,MAAQtD,EAAOwD,YAO1BC,gBAAkB,MACJ5H,SAAS0D,eAAe,eAChC+D,MAAQ,GAEEzH,SAAS0D,eAAe,iBAChC+D,MAAQ,EAEEzH,SAAS0D,eAAe,mBAChC+D,MAAQ,KAMlB9F,aAAe,MAEd,MAAMuF,EAAYlH,SAAS0D,eAAe,cACvCwD,GACFA,EAAU1B,SAEAxF,SAAS0D,eAAe,gBAChCG,UAAY,GAEfmD,iBAEG1F,KAAKxB,UACP0H,mBASFD,iBAAmB,CAACpD,IAEnB,MAAM4C,EAAK/G,SAAS4D,cAAc,MAE5BiE,EAAS7H,SAAS4D,cAAc,OACtCiE,EAAOxC,UAAUC,IAAI,iBAErB,MAAML,EAAOjF,SAAS4D,cAAc,KACpCqB,EAAKpB,UAAYM,EAAOc,KACxBA,EAAKI,UAAUC,IAAI,eACnBuC,EAAOnB,YAAYzB,GAEnB,MAAM6C,EAAO9H,SAAS4D,cAAc,KAE9BmE,EADW,IAAIC,KAAK7D,EAAO8D,WACLC,mBAAmB,QAAS,CAACC,KAAM,UAAWC,MAAO,QAAS3B,IAAK,YAC/FqB,EAAKjE,UAAYkE,EACjBD,EAAKzC,UAAUC,IAAI,eACnBuC,EAAOnB,YAAYoB,GAEnB,MAAM3G,EAAUnB,SAAS4D,cAAc,OACvCzC,EAAQkE,UAAUC,IAAI,kBAEtB,MAAMoC,EAAS1H,SAAS4D,cAAc,KACtC8D,EAAO7D,qBAAuBM,EAAOuD,SACrCA,EAAOrC,UAAUC,IAAI,iBACrBnE,EAAQuF,YAAYgB,GAEpB,MAAMW,EAAOrI,SAAS4D,cAAc,KACpCyE,EAAKxE,UAAY,OACjBwE,EAAKhD,UAAUC,IAAI,eAEnB+C,EAAKC,QAAU5H,OAAO6H,iBAAiBjH,KAAK5B,sBAAsByE,EAAOvE,iBACzEuB,EAAQuF,YAAY2B,GAEpB,MAAMhE,EAAerE,SAAS4D,cAAc,KAC5CS,EAAaR,UAAY,SACzBQ,EAAagB,UAAUC,IAAI,iBAC3BjB,EAAapE,iBAAiB,QAASmF,IAAMoD,cAAcrE,EAAOvE,MAClEuB,EAAQuF,YAAYrC,GAEpB,MAAMsD,EAAW3H,SAAS4D,cAAc,KAQxC,OAPA+D,EAAS9D,UAAYM,EAAOwD,SAC5BA,EAAStC,UAAUC,IAAI,mBACvBnE,EAAQuF,YAAYiB,GAEpBZ,EAAGL,YAAYmB,GACfd,EAAGL,YAAYvF,GAER4F,IAMR0B,iBAAmB,MAClB,MAAMxD,EAAOjF,SAAS0D,eAAe,eAAe+D,MAE9CiB,EAAe1I,SAAS0D,eAAe,iBACvCgE,EAASgB,EAAaA,EAAaC,eAAelB,MAElDE,EAAW3H,SAAS0D,eAAe,mBAAmB+D,MAExDnG,KAAKxB,SAQRsE,aAAa9C,KAAKxB,SAAU,CAC3BmF,KAAQA,EACRyC,OAAUA,EACVC,SAAYA,IAVbzD,aAAa,CACZ0E,cAAiBtH,KAAK1B,GACtBqF,KAAQA,EACRyC,OAAUA,EACVC,SAAYA,IAUdkB,OAAOC,SAASR,KAAO5H,OAAO6H,iBAAiBjH,KAAK5B,cAOrD8I,cAAgB5I,CAAAA,IACf,MAAMmJ,EAAS/I,SAAS0D,eAAe,iBAEjCsF,EAAUD,EAAOE,qBAAqB,UAC5C,IAAI,IAAIC,KAAUF,EACjBE,EAAOjJ,iBAAiB,QAASmF,IACV,WAAnBA,EAAE+D,OAAO1B,OACXpD,aAAazE,GAEdI,SAAS0D,eAAe,iBAAiB2B,UAAUC,IAAI,UACpDtF,SAAS0D,eAAe,iBAAiB2B,UAAUC,IAAI,YAI5DyD,EAAO1D,UAAUG,OAAO,UACxBxF,SAAS0D,eAAe,iBAAiB2B,UAAUG,OAAO,UAC1DxF,SAAS0D,eAAe,iBAAiB0F,UAM1CvH,iBAAmB,MAElBwH,aADe,+CAOhBzH,oBAAsB,MAErByH,aADe,mCAOhBtH,oBAAsB,MAErBsH,aADe,iCAOhBrH,iBAAmB,MAElBqH,aADe,6CAQhBA,aAAeC,CAAAA,IACd,MAAMP,EAAS/I,SAAS0D,eAAe,iBACzB1D,SAAS0D,eAAe,eAChCG,UAAYyF,EAElB,MAAMN,EAAUD,EAAOE,qBAAqB,UAC5C,IAAI,IAAIC,KAAUF,EACjBE,EAAOjJ,iBAAiB,QAASmF,IAChCpF,SAAS0D,eAAe,iBAAiB2B,UAAUC,IAAI,UACpDtF,SAAS0D,eAAe,iBAAiB2B,UAAUC,IAAI,YAI5DyD,EAAO1D,UAAUG,OAAO,UACxBxF,SAAS0D,eAAe,iBAAiB2B,UAAUG,OAAO,UAC1DxF,SAAS0D,eAAe,yBAAyB0F","file":"../js/details.js","sourcesContent":["let restaurant,\r\n\tworker,\r\n\tid,\r\n\treviews,\r\n\treviewID;\r\n\r\nvar newMap;\r\n\r\n\tdocument.addEventListener('DOMContentLoaded', event => {\r\n\t\tSWHelper.registerServiceWorker();\r\n\r\n\t\tthis.reviews = [];\r\n\r\n\t\t// worker to handle all restaurant retrieval\r\n\t\tthis.worker = new Worker('/js/restaurantWorker.js');\r\n\t\tthis.worker.onmessage = handleWorkerMessage;\r\n\r\n\t\tthis.id = Number(Helper.getParameterByName('id'));\r\n\t\tthis.reviewID = Number(Helper.getParameterByName('review'));\r\n\t\trequestAnimationFrame(initReviews);\r\n\t\tgetRestaurant(this.id);\r\n\t\tgetReviews(this.id);\r\n\r\n\t\trequestAnimationFrame(fillFormTitle);\r\n\t})\r\n\r\n/**\r\n * Handle messages from worker thread\r\n * @param  {Message} msg Message from worker thread\r\n */\r\nhandleWorkerMessage = msg => {\r\n\tconst data = msg.data;\r\n\tconst content = data.msgData;\r\n\r\n\tswitch(data.retrieved){\r\n\t\tcase 'restaurant':\r\n\t\t\tself.restaurant = content;\r\n\t\t\tif(!newMap){\r\n\t\t\t\trequestAnimationFrame(initMap);\r\n\t\t\t\tfillBreadcrumb();\r\n\t\t\t}\r\n\t\t\trequestAnimationFrame(fillRestaurantHTML);\r\n\t\t\tbreak;\r\n\t\tcase 'restaurantReviews':\r\n\t\t\taddReviews(content);\r\n\t\t\trequestAnimationFrame(resetReviews);\r\n\t\t\tbreak;\r\n\t\tcase 'uploadReview':\r\n\t\t\tif(content){\r\n\t\t\t\trequestAnimationFrame(notifyUploadSuccess);\r\n\t\t\t\tself.reviews = [];\r\n\t\t\t\tgetReviews(self.id);\r\n\t\t\t}else{\r\n\t\t\t\trequestAnimationFrame(notifyUploadFail);\r\n\t\t\t\tregisterSync();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'delete':\r\n\t\t\tif(content){\r\n\t\t\t\trequestAnimationFrame(notifyDeleteSuccess);\r\n\t\t\t}else{\r\n\t\t\t\trequestAnimationFrame(notifyDeleteFail);\r\n\t\t\t\tregisterSync();\r\n\t\t\t}\r\n\t\t\tself.reviews = [];\r\n\t\t\tgetReviews(self.id);\r\n\t\t\tbreak;\r\n\t\tcase 'favorited':\r\n\t\t\tif(!content)\r\n\t\t\t\tregisterSync();\r\n\t\t\tgetRestaurant(self.id);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register serviceWorker sync event\r\n * @return {Promise} Resolves if registration is successful\r\n */\r\nregisterSync = () =>{\r\n\tnavigator.serviceWorker.ready.then(reg => {\r\n\t\treturn reg.sync.register('syncReviews')\r\n\t}).catch(error => {\r\n\t\tconsole.error(error);\r\n\t});\r\n}\r\n\r\n/**\r\n * Initialize mapbox map\r\n */\r\ninitMap = () => {\r\n\tconst restaurant = self.restaurant;\r\n\tself.newMap = L.map('map', {\r\n\t    center: [restaurant.latlng.lat, restaurant.latlng.lng],\r\n\t    zoom: 16,\r\n\t    scrollWheelZoom: false\r\n\t  });\r\n\t  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\r\n\t    mapboxToken: 'pk.eyJ1IjoiYmluYXJ5aWRpb3QiLCJhIjoiY2pqMzZjNWRtMWF2YTNrbXRsb2VueGlydyJ9.mkjp31-552zW210Dz1PUcQ',\r\n\t    maxZoom: 18,\r\n\t    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n\t      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n\t      'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n\t    id: 'mapbox.streets'    \r\n\t  }).addTo(newMap);\r\n\r\n\t  Helper.mapMarkerForRestaurant(self.restaurant, self.newMap);\r\n}\r\n\r\n/**\r\n * Setup initial review container\r\n */\r\ninitReviews = () => {\r\n\tconst container = document.getElementById('reviews-container');\r\n\tconst title = document.createElement('h3');\r\n\ttitle.innerHTML = 'Reviews';\r\n\tcontainer.insertBefore(title, container.firstChild);\r\n}\r\n\r\n/**\r\n * Have the worker retrieve a restaurant\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n * @param  {Int} id     id of restaurant to retrieve\r\n */\r\ngetRestaurant = (id, worker = self.worker) => {\r\n\tworker.postMessage({action: 'getRestaurant', id: id});\r\n}\r\n\r\n/**\r\n * Have the worker retrieve a review\r\n * @param  {int} id     id of review to retrieve\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ngetReviews = (id, worker = self.worker) => {\r\n\tworker.postMessage({action: 'getRestaurantReviews', id: id});\r\n}\r\n\r\n/**\r\n * Have the worker create a review\r\n * @param  {[Json]} review Review data for creation\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ncreateReview = (review, worker = self.worker) => {\r\n\tworker.postMessage({action: 'createReview', review: review});\r\n}\r\n\r\n/**\r\n * Have the worker update a review\r\n * @param  {int} id     id of the review to update\r\n * @param  {Json} review Review data for update\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\nupdateReview = (id, review, worker = self.worker) => {\r\n\tworker.postMessage({action: 'updateReview', id: id, review: review});\r\n}\r\n\r\n/**\r\n * Have the worker delete the review\r\n * @param  {int} id     id of the review to delete\r\n * @param  {RestaurantWorker} worker worker to handle the request\r\n */\r\ndeleteReview = (id, worker = self.worker) => {\r\n\tworker.postMessage({action: 'deleteReview', id: id});\r\n}\r\n\r\n/**\r\n * Have the worker set favorite to the other state \r\n * @param  {Json} restaurant The restaurant to (un)favorite\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ntoggleFavorite = (restaurant, worker = this.worker) => {\r\n\tlet state = false;\r\n\tif(restaurant.is_favorite == false || restaurant.is_favorite == \"false\")\r\n\t\tstate = true;\r\n\tworker.postMessage({action: 'setFavorite', id:restaurant.id, state:state});\r\n}\r\n\r\n/**\r\n * Get review from list of reviews\r\n * @param  {int} id id of review to retrieve\r\n * @return {Json}    Review from id\r\n */\r\ngetReview = (id = self.reviewID) => {\r\n\tfor(review of self.reviews){\r\n\t\tif(review.id == Number(id))\r\n\t\t\treturn review;\r\n\t\t\r\n\t}\r\n\r\n\treturn null;\r\n} \r\n/**\r\n * Add or update self.reviews\r\n * @param  {Json} newReviews Restaurants to add\r\n */\r\naddReviews = newReviews => {\r\n\r\n\tfor(newReview of newReviews){\r\n\t\tlet reviewFound = false;\r\n\r\n\t\t// if review is already in self.reviews then update it otherwise add it to the list;\r\n\t\tfor([index, review] of self.reviews.entries()){\r\n\t\t\tif(review.id == newReview.id){\r\n\t\t\t\treviewFound = true;\r\n\t\t\t\tself.reviews[index] = newReview;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!reviewFound){\r\n\t\t\tself.reviews.push(newReview);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * label form as create or update\r\n */\r\nfillFormTitle = () => {\r\n\tconst title = document.getElementById('form-title');\r\n\tconst type = (self.reviewID) ? 'Update' : 'Create';\r\n\r\n\ttitle.innerHTML = `${type} review`;\r\n\r\n}\r\n\r\n/**\r\n * Fill restaurant page with restaurant data\r\n * @param  {Json} restaurant Restaurant to fill page with\r\n */\r\nfillRestaurantHTML = () => {\r\n\tconst restaurant = self.restaurant;\r\n\r\n\tconst container = document.getElementById('restaurant-container');\r\n\r\n\tconst name = document.getElementById('restaurant-name');\r\n\tname.innerHTML = restaurant.name;\r\n\r\n\tconst fav = document.getElementById('fav-toggle-button');\r\n\tfav.onclick = e => {toggleFavorite(restaurant)};\r\n\r\n\tif(restaurant.is_favorite == true || restaurant.is_favorite == \"true\"){\r\n\t\tfav.classList.add('favorited');\r\n\t\tcontainer.setAttribute('aria-label', 'Favorite Restaurant');\r\n\t}else{\r\n\t\tfav.classList.remove('favorited');\r\n\t\tcontainer.setAttribute('aria-label', 'Restaurant');\r\n\t}\t\r\n\r\n\tconst address = document.getElementById('restaurant-address');\r\n\taddress.innerHTML = restaurant.address;\r\n\r\n\tconst image = document.getElementById('restaurant-img');\r\n\tconst imgSrc =  Helper.imageUrlForRestaurant(restaurant);\r\n\timage.className = 'restaurant-img'\r\n\timage.src = `${ imgSrc }-small.jpg`;\r\n\timage.srcset = `${ imgSrc }-small.jpg 300w, ${ imgSrc }-medium.jpg 600w, ${ imgSrc }-large.jpg 800w`;\r\n\timage.size = '(max-width: 767) calc(100% - 30px), calc(50% - 30px)';\r\n\timage.alt = restaurant.alt;\r\n\r\n\tconst cuisine = document.getElementById('restaurant-cuisine');\r\n\tcuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n\t// fill operating hours\r\n\tif (restaurant.operating_hours) {\r\n\tfillRestaurantHoursHTML();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Fill operating hours section\r\n * @param  {Json} operatingHours Operating hours to add to page\r\n */\r\nfillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n\tconst hours = document.getElementById('restaurant-hours');\r\n\thours.innerHTML = '';\r\n\tfor (let key in operatingHours) {\r\n\t\tconst row = document.createElement('tr');\r\n\r\n\t\tconst day = document.createElement('td');\r\n\t\tday.innerHTML = key;\r\n\t\trow.appendChild(day);\r\n\r\n\t\tconst time = document.createElement('td');\r\n\t\tconst oh = operatingHours[key].replace(/,/, '<br>');\r\n\t\ttime.innerHTML = oh;\r\n\t\trow.appendChild(time);\r\n\r\n\t\thours.appendChild(row);\r\n\t}\r\n}\r\n\r\n/**\r\n * Fill page breadcrumb\r\n * @param  {Json} restaurant Restaurant for page\r\n */\r\nfillBreadcrumb = () => {\r\n\tconst restaurant = self.restaurant;\r\n\r\n\tconst breadcrumb = document.getElementById('breadcrumb');\r\n\tconst li = document.createElement('li');\r\n\tli.innerHTML = restaurant.name;\r\n\tbreadcrumb.appendChild(li);\r\n}\r\n\r\n/**\r\n * Add reviews to page\r\n */\r\nfillReviewHTML = () => {\r\n\tconst reviews = self.reviews;\r\n\tconst container = document.getElementById('reviews-container');\r\n\t\r\n\tif (reviews.length == 0) {\r\n\t\tconst noReviews = document.createElement('p');\r\n\t\tnoReviews.innerHTML = 'No reviews yet!';\r\n\t\tnoReviews.setAttribute('id', 'no-reviews');\r\n\t\tcontainer.insertBefore(noReviews, container.firstChild.nextSibling);\r\n\t\treturn;\r\n\t}\r\n\tconst nor = document.getElementById('no-reviews');\r\n\tif(nor) //Without this \"No reviews yet!\" will be shown under reviews first time page is loaded\r\n\t\tcontainer.removeChild(nor);\r\n\tconst ul = document.getElementById('reviews-list');\r\n\tfor(review of reviews){\r\n\t\tul.appendChild(createReviewHTML(review));\r\n\t}\r\n\tcontainer.insertBefore(ul, container.firstChild.nextSibling);\r\n\r\n}\r\n\r\n/**\r\n * Fill form review data if updating\r\n */\r\nfillReviewForm = () => {\r\n\tconst review = getReview();\r\n\tif(review){\r\n\t\tconst name = document.getElementById('review-name');\r\n\t\tname.value = review.name;\r\n\r\n\t\tconst rating = document.getElementById('review-rating');\r\n\t\trating.value = review.rating;\r\n\r\n\t\tconst comments = document.getElementById('review-comments');\r\n\t\tcomments.value = review.comments;\r\n\t}\r\n}\r\n\r\n/**\r\n * Clear the fields of the review form\r\n */\r\nclearReviewForm = () => {\r\n\tconst name = document.getElementById('review-name');\r\n\tname.value = '';\r\n\r\n\tconst rating = document.getElementById('review-rating');\r\n\trating.value = 1;\r\n\r\n\tconst comments = document.getElementById('review-comments');\r\n\tcomments.value = '';\r\n}\r\n\r\n/**\r\n * Reset the review container\r\n */\r\nresetReviews = () => {\r\n\r\n\tconst noReviews = document.getElementById('no-reviews');\r\n\tif(noReviews)\r\n\t\tnoReviews.remove();\r\n\r\n\tconst ul = document.getElementById('reviews-list');\r\n\tul.innerHTML = '';\r\n\r\n\tfillReviewHTML();\r\n\r\n\tif(self.reviewID){\r\n\t\tfillReviewForm();\r\n\t}\r\n}\r\n\r\n/**\r\n * Create review item\r\n * @param  {Json} review The review to create\r\n * @return {HTML}        A li of the review\r\n */\r\ncreateReviewHTML = (review) => {\r\n\r\n\tconst li = document.createElement('li');\r\n\r\n\tconst header = document.createElement('div');\r\n\theader.classList.add(\"review-header\");\r\n\r\n\tconst name = document.createElement('p');\r\n\tname.innerHTML = review.name;\r\n\tname.classList.add('review-name');\r\n\theader.appendChild(name);\r\n\r\n\tconst date = document.createElement('p');\r\n\tconst dateMili = new Date(review.updatedAt); // Date is in milliseconds\r\n\tconst dateString = dateMili.toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'});\r\n\tdate.innerHTML = dateString;\r\n\tdate.classList.add('review-date');\r\n\theader.appendChild(date);\r\n\r\n\tconst content = document.createElement('div');\r\n\tcontent.classList.add(\"review-content\");\r\n\r\n\tconst rating = document.createElement('p');\r\n\trating.innerHTML = `Rating: ${review.rating}`;\r\n\trating.classList.add('review-rating');\r\n\tcontent.appendChild(rating);\r\n\r\n\tconst edit = document.createElement('a');\r\n\tedit.innerHTML = 'Edit';\r\n\tedit.classList.add('review-edit');\r\n\t// Link to restaurant page with review as a param, will also move focus to the edit form automatically\r\n\tedit.href = `${Helper.urlForRestaurant(self.restaurant)}&review=${review.id}#review-form`;\r\n\tcontent.appendChild(edit);\r\n\r\n\tconst deleteReview = document.createElement('a');\r\n\tdeleteReview.innerHTML = 'Delete';\r\n\tdeleteReview.classList.add('review-delete');\r\n\tdeleteReview.addEventListener('click', e => {confirmDelete(review.id)});\r\n\tcontent.appendChild(deleteReview);\r\n\r\n\tconst comments = document.createElement('p');\r\n\tcomments.innerHTML = review.comments;\r\n\tcomments.classList.add('review-comments');\r\n\tcontent.appendChild(comments);\r\n\r\n\tli.appendChild(header);\r\n\tli.appendChild(content);\r\n\r\n\treturn li;\r\n}\r\n\r\n/**\r\n * Handle form submission\r\n */\r\nhandleFormSubmit = () => {\r\n\tconst name = document.getElementById('review-name').value;\r\n\r\n\tconst ratingSelect = document.getElementById('review-rating');\r\n\tconst rating = ratingSelect[ratingSelect.selectedIndex].value;\r\n\r\n\tconst comments = document.getElementById('review-comments').value;\r\n\r\n\tif(!self.reviewID){\r\n\t\tcreateReview({\r\n\t\t\t'restaurant_id': self.id,\r\n\t\t\t'name': name,\r\n\t\t\t'rating': rating,\r\n\t\t\t'comments': comments\r\n\t\t});\r\n\t}else{\r\n\t\tupdateReview(self.reviewID, {\r\n\t\t\t'name': name,\r\n\t\t\t'rating': rating,\r\n\t\t\t'comments': comments\r\n\t\t});\r\n\t}\r\n\r\n\twindow.location.href = Helper.urlForRestaurant(self.restaurant);\r\n}\r\n\r\n/**\r\n * confirm the deletion of review\r\n * @param  {int} id review to delete\r\n */\r\nconfirmDelete = id => {\r\n\tconst dialog = document.getElementById('delete-dialog');\r\n\r\n\tconst buttons = dialog.getElementsByTagName('button');\r\n\tfor(let button of buttons){\r\n\t\tbutton.addEventListener('click', e => {\r\n\t\t\tif(e.target.value === 'delete'){\r\n\t\t\t\tdeleteReview(id);\r\n\t\t\t}\r\n\t\t\tdocument.getElementById('delete-dialog').classList.add('hidden');\r\n    \t\tdocument.getElementById('dialog-spacer').classList.add('hidden');\r\n\t\t})\r\n\t}\r\n\r\n\tdialog.classList.remove('hidden');\r\n\tdocument.getElementById('dialog-spacer').classList.remove('hidden');\r\n\tdocument.getElementById('delete-button').focus();\r\n}\r\n\r\n/**\r\n * Notify when review fails to upload\r\n */\r\nnotifyUploadFail = () => {\r\n\tconst notify = 'Review will be uploaded when reconnected.';\r\n\tnotifyUpdate(notify);\r\n}\r\n\r\n/**\r\n * Notify when review uploads\r\n */\r\nnotifyUploadSuccess = () => {\r\n\tconst notify = 'Review successfully uploaded.';\r\n\tnotifyUpdate(notify);\r\n}\r\n\r\n/**\r\n * Notify when review is deleted\r\n */\r\nnotifyDeleteSuccess = () => {\r\n\tconst notify = 'Review successfully deleted';\r\n\tnotifyUpdate(notify);\r\n}\r\n\r\n/**\r\n * Notify when review fails to delete\r\n */\r\nnotifyDeleteFail = () => {\r\n\tconst notify = 'Review will be deleted when reconnected';\r\n\tnotifyUpdate(notify);\r\n}\r\n\r\n/**\r\n * Display notify dialog\r\n * @param  {String} notify Message to display\r\n */\r\nnotifyUpdate = notify => {\r\n\tconst dialog = document.getElementById('update-dialog');\r\n\tconst title = document.getElementById('updateTitle');\r\n\ttitle.innerHTML = notify;\r\n\r\n\tconst buttons = dialog.getElementsByTagName('button');\r\n\tfor(let button of buttons){\r\n\t\tbutton.addEventListener('click', e => {\r\n\t\t\tdocument.getElementById('update-dialog').classList.add('hidden');\r\n    \t\tdocument.getElementById('dialog-spacer').classList.add('hidden');\r\n\t\t})\r\n\t}\r\n\r\n\tdialog.classList.remove('hidden');\r\n\tdocument.getElementById('dialog-spacer').classList.remove('hidden');\r\n\tdocument.getElementById('dismiss-update-button').focus();\r\n\r\n}"]}