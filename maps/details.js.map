{"version":3,"sources":["details.js"],"names":["document","addEventListener","event","worker","Worker","onmessage","handleWorkerMessage","getRestaurant","msg","data","content","msgData","retrieved","console","log","id","postMessage","action"],"mappings":"AACCA,SAASC,iBAAiB,mBAAoBC,IAE7C,IAAIC,EAAS,IAAIC,OAAO,+BACxBD,EAAOE,UAAYC,oBACnBC,cAAcJ,EAAQ,KAOxBG,oBAAsBE,CAAAA,IACrB,MAAMC,EAAOD,EAAIC,KACXC,EAAUD,EAAKE,QAErB,OAAOF,EAAKG,WACX,IAAK,aACJC,QAAQC,IAAIJ,MAUfH,cAAgB,EAACJ,EAAQY,KACxBZ,EAAOa,YAAY,CAACC,OAAQ,gBAAiBF,GAAIA","file":"../js/details.js","sourcesContent":["\r\n\tdocument.addEventListener('DOMContentLoaded', event => {\r\n\t\t// worker to handle all restaurant retrieval\r\n\t\tlet worker = new Worker('/src/js/restaurantWorker.js');\r\n\t\tworker.onmessage = handleWorkerMessage;\r\n\t\tgetRestaurant(worker, 1);\r\n\t})\r\n\r\n/**\r\n * Handle messages from worker thread\r\n * @param  {Message} msg Message from worker thread\r\n */\r\nhandleWorkerMessage = msg => {\r\n\tconst data = msg.data;\r\n\tconst content = data.msgData;\r\n\r\n\tswitch(data.retrieved){\r\n\t\tcase 'restaurant':\r\n\t\t\tconsole.log(content);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n/**\r\n * Have the worker retrieve a restaurant\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n * @param  {Int} id     id of restaurant to retrieve\r\n */\r\ngetRestaurant = (worker, id) => {\r\n\tworker.postMessage({action: 'getRestaurant', id: id});\r\n}"]}