{"version":3,"sources":["details.js"],"names":["restaurant","worker","id","reviews","reviewID","newMap","document","addEventListener","event","SWHelper","registerServiceWorker","this","Worker","onmessage","handleWorkerMessage","Helper","getParameterByName","requestAnimationFrame","initReviews","getRestaurant","getReviews","fillFormTitle","msg","data","content","msgData","retrieved","self","initMap","fillRestaurantHTML","addReviews","resetReviews","L","map","center","latlng","lat","lng","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","addTo","mapMarkerForRestaurant","container","getElementById","title","createElement","innerHTML","insertBefore","firstChild","postMessage","action","createReview","review","updateReview","getReview","Number","newReviews","newReview","reviewFound","index","entries","push","type","name","address","image","imgSrc","imageUrlForRestaurant","className","src","srcset","size","alt","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillBreadcrumb","operatingHours","hours","key","row","day","appendChild","time","oh","replace","breadcrumb","li","fillReviewHTML","length","noReviews","nextSibling","ul","createReviewHTML","fillReviewForm","value","rating","comments","remove","header","classList","add","date","dateString","Date","updatedAt","toLocaleDateString","year","month","edit","href","urlForRestaurant","handleFormSubmit","ratingSelect","selectedIndex","restaurant_id"],"mappings":"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","file":"../js/details.js","sourcesContent":["let restaurant,\r\n\tworker,\r\n\tid,\r\n\treviews,\r\n\treviewID;\r\n\r\nvar newMap;\r\n\r\n\tdocument.addEventListener('DOMContentLoaded', event => {\r\n\t\tSWHelper.registerServiceWorker();\r\n\r\n\t\tthis.reviews = [];\r\n\r\n\t\t// worker to handle all restaurant retrieval\r\n\t\tthis.worker = new Worker('/js/restaurantWorker.js');\r\n\t\tthis.worker.onmessage = handleWorkerMessage;\r\n\r\n\t\tthis.id = Helper.getParameterByName('id');\r\n\t\tthis.reviewID = Helper.getParameterByName('review');\r\n\t\trequestAnimationFrame(initReviews);\r\n\t\tgetRestaurant(this.id);\r\n\t\tgetReviews(this.id);\r\n\r\n\t\trequestAnimationFrame(fillFormTitle);\r\n\t})\r\n\r\n/**\r\n * Handle messages from worker thread\r\n * @param  {Message} msg Message from worker thread\r\n */\r\nhandleWorkerMessage = msg => {\r\n\tconst data = msg.data;\r\n\tconst content = data.msgData;\r\n\r\n\tswitch(data.retrieved){\r\n\t\tcase 'restaurant':\r\n\t\t\tself.restaurant = content;\r\n\t\t\trequestAnimationFrame(initMap);\r\n\t\t\trequestAnimationFrame(fillRestaurantHTML);\r\n\t\t\tbreak;\r\n\t\tcase 'restaurantReviews':\r\n\t\t\taddReviews(content);\r\n\t\t\trequestAnimationFrame(resetReviews);\r\n\t}\r\n}\r\n\r\n/**\r\n * Initialize mapbox map\r\n */\r\ninitMap = () => {\r\n\tconst restaurant = self.restaurant;\r\n\tself.newMap = L.map('map', {\r\n\t    center: [restaurant.latlng.lat, restaurant.latlng.lng],\r\n\t    zoom: 16,\r\n\t    scrollWheelZoom: false\r\n\t  });\r\n\t  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\r\n\t    mapboxToken: 'pk.eyJ1IjoiYmluYXJ5aWRpb3QiLCJhIjoiY2pqMzZjNWRtMWF2YTNrbXRsb2VueGlydyJ9.mkjp31-552zW210Dz1PUcQ',\r\n\t    maxZoom: 18,\r\n\t    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n\t      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n\t      'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n\t    id: 'mapbox.streets'    \r\n\t  }).addTo(newMap);\r\n\r\n\t  Helper.mapMarkerForRestaurant(self.restaurant, self.newMap);\r\n}\r\n\r\n/**\r\n * Setup initial review container\r\n */\r\ninitReviews = () => {\r\n\tconst container = document.getElementById('reviews-container');\r\n\tconst title = document.createElement('h3');\r\n\ttitle.innerHTML = 'Reviews';\r\n\tcontainer.insertBefore(title, container.firstChild);\r\n}\r\n\r\n/**\r\n * Have the worker retrieve a restaurant\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n * @param  {Int} id     id of restaurant to retrieve\r\n */\r\ngetRestaurant = (id, worker = self.worker) => {\r\n\tworker.postMessage({action: 'getRestaurant', id: id});\r\n}\r\n\r\n/**\r\n * Have the worker retrieve a review\r\n * @param  {int} id     id of review to retrieve\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ngetReviews = (id, worker = self.worker) => {\r\n\tworker.postMessage({action: 'getRestaurantReviews', id: id});\r\n}\r\n\r\n/**\r\n * Have the worker create a review\r\n * @param  {[Json]} review Review data for creation\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\ncreateReview = (review, worker = self.worker) => {\r\n\tworker.postMessage({action: 'createReview', review: review});\r\n}\r\n\r\n/**\r\n * Have the worker update a review\r\n * @param  {int} id     id of the review to update\r\n * @param  {Json} review Review data for update\r\n * @param  {RestaurantWorker} worker worker to handle request\r\n */\r\nupdateReview = (id, review, worker = self.worker) => {\r\n\tworker.postMessage({action: 'updateReview', id: id, review: review});\r\n}\r\n\r\n/**\r\n * Get review from list of reviews\r\n * @param  {int} id id of review to retrieve\r\n * @return {Json}    Review from id\r\n */\r\ngetReview = (id = self.reviewID) => {\r\n\tfor(review of self.reviews){\r\n\t\tif(review.id == Number(id))\r\n\t\t\treturn review;\r\n\t\t\r\n\t}\r\n\r\n\treturn null;\r\n} \r\n/**\r\n * Add or update self.reviews\r\n * @param  {Json} newReviews Restaurants to add\r\n */\r\naddReviews = newReviews => {\r\n\r\n\tfor(newReview of newReviews){\r\n\t\tlet reviewFound = false;\r\n\r\n\t\t// if review is already in self.reviews then update it otherwise add it to the list;\r\n\t\tfor([index, review] of self.reviews.entries()){\r\n\t\t\tif(review.id == newReview.id){\r\n\t\t\t\treviewFound = true;\r\n\t\t\t\tself.reviews[index] = newReview;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!reviewFound){\r\n\t\t\tself.reviews.push(newReview);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * label form as create or update\r\n */\r\nfillFormTitle = () => {\r\n\tconst title = document.getElementById('form-title');\r\n\tconst type = (self.reviewID) ? 'Update' : 'Create';\r\n\r\n\ttitle.innerHTML = `${type} review`;\r\n\r\n}\r\n\r\n/**\r\n * Fill restaurant page with restaurant data\r\n * @param  {Json} restaurant Restaurant to fill page with\r\n */\r\nfillRestaurantHTML = () => {\r\n\tconst restaurant = self.restaurant;\r\n\r\n\tconst name = document.getElementById('restaurant-name');\r\n\tname.innerHTML = restaurant.name;\r\n\r\n\tconst address = document.getElementById('restaurant-address');\r\n\taddress.innerHTML = restaurant.address;\r\n\r\n\tconst image = document.getElementById('restaurant-img');\r\n\tconst imgSrc =  Helper.imageUrlForRestaurant(restaurant);\r\n\timage.className = 'restaurant-img'\r\n\timage.src = `${ imgSrc }-small.jpg`;\r\n\timage.srcset = `${ imgSrc }-small.jpg 300w, ${ imgSrc }-medium.jpg 600w, ${ imgSrc }-large.jpg 800w`;\r\n\timage.size = '(max-width: 767) calc(100% - 30px), calc(50% - 30px)';\r\n\timage.alt = restaurant.alt;\r\n\r\n\tconst cuisine = document.getElementById('restaurant-cuisine');\r\n\tcuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n\t// fill operating hours\r\n\tif (restaurant.operating_hours) {\r\n\tfillRestaurantHoursHTML();\r\n\t}\r\n\r\n\t// TODO: Add reviews to page\r\n\tfillBreadcrumb();\r\n}\r\n\r\n/**\r\n * Fill operating hours section\r\n * @param  {Json} operatingHours Operating hours to add to page\r\n */\r\nfillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n\tconst hours = document.getElementById('restaurant-hours');\r\n\tfor (let key in operatingHours) {\r\n\t\tconst row = document.createElement('tr');\r\n\r\n\t\tconst day = document.createElement('td');\r\n\t\tday.innerHTML = key;\r\n\t\trow.appendChild(day);\r\n\r\n\t\tconst time = document.createElement('td');\r\n\t\tconst oh = operatingHours[key].replace(/,/, '<br>');\r\n\t\ttime.innerHTML = oh;\r\n\t\trow.appendChild(time);\r\n\r\n\t\thours.appendChild(row);\r\n\t}\r\n}\r\n\r\n/**\r\n * Fill page breadcrumb\r\n * @param  {Json} restaurant Restaurant for page\r\n */\r\nfillBreadcrumb = () => {\r\n\tconst restaurant = self.restaurant;\r\n\r\n\tconst breadcrumb = document.getElementById('breadcrumb');\r\n\tconst li = document.createElement('li');\r\n\tli.innerHTML = restaurant.name;\r\n\tbreadcrumb.appendChild(li);\r\n}\r\n\r\n/**\r\n * Add reviews to page\r\n */\r\nfillReviewHTML = () => {\r\n\tconst reviews = self.reviews;\r\n\tconst container = document.getElementById('reviews-container');\r\n\t\r\n\tif (reviews.length == 0) {\r\n\t\tconst noReviews = document.createElement('p');\r\n\t\tnoReviews.innerHTML = 'No reviews yet!';\r\n\t\tcontainer.insertBefore(noReviews, container.firstChild.nextSibling);\r\n\t\treturn;\r\n\t}\r\n\tconst ul = document.getElementById('reviews-list');\r\n\tfor(review of reviews){\r\n\t\tul.appendChild(createReviewHTML(review));\r\n\t}\r\n\tcontainer.insertBefore(ul, container.firstChild.nextSibling);\r\n\r\n}\r\n\r\n/**\r\n * Fill form review data if updating\r\n */\r\nfillReviewForm = () => {\r\n\tconst review = getReview();\r\n\r\n\tconst name = document.getElementById('review-name');\r\n\tname.value = review.name;\r\n\r\n\tconst rating = document.getElementById('review-rating');\r\n\trating.value = review.rating;\r\n\r\n\tconst comments = document.getElementById('review-comments');\r\n\tcomments.value = review.comments;\r\n}\r\n\r\n/**\r\n * Reset the review container\r\n */\r\nresetReviews = () => {\r\n\r\n\tconst noReviews = document.getElementById('no-reviews');\r\n\tif(noReviews)\r\n\t\tnoReviews.remove();\r\n\r\n\tconst ul = document.getElementById('reviews-list');\r\n\tul.innerHTML = '';\r\n\r\n\tfillReviewHTML();\r\n\r\n\tif(self.reviewID){\r\n\t\tfillReviewForm();\r\n\t}\r\n}\r\n\r\n/**\r\n * Create review item\r\n * @param  {Json} review The review to create\r\n * @return {HTML}        A li of the review\r\n */\r\ncreateReviewHTML = (review) => {\r\n\r\n\tconst li = document.createElement('li');\r\n\r\n\tconst header = document.createElement('div');\r\n\theader.classList.add(\"review-header\");\r\n\r\n\tconst name = document.createElement('p');\r\n\tname.innerHTML = review.name;\r\n\tname.classList.add('review-name');\r\n\theader.appendChild(name);\r\n\r\n\tconst date = document.createElement('p');\r\n\tconst dateMili = new Date(review.updatedAt); // Date is in milliseconds\r\n\tconst dateString = dateMili.toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'});\r\n\tdate.innerHTML = dateString;\r\n\tdate.classList.add('review-date');\r\n\theader.appendChild(date);\r\n\r\n\tconst content = document.createElement('div');\r\n\tcontent.classList.add(\"review-content\");\r\n\r\n\tconst rating = document.createElement('p');\r\n\trating.innerHTML = `Rating: ${review.rating}`;\r\n\trating.classList.add('review-rating');\r\n\tcontent.appendChild(rating);\r\n\r\n\tconst edit = document.createElement('a');\r\n\tedit.innerHTML = 'Edit';\r\n\tedit.classList.add('review-edit');\r\n\t// Link to restaurant page with review as a param, will also move focus to the edit form automatically\r\n\tedit.href = `${Helper.urlForRestaurant(self.restaurant)}&review=${review.id}#review-form`;\r\n\tcontent.appendChild(edit);\r\n\r\n\tconst comments = document.createElement('p');\r\n\tcomments.innerHTML = review.comments;\r\n\tcomments.classList.add('review-comments');\r\n\tcontent.appendChild(comments);\r\n\r\n\tli.appendChild(header);\r\n\tli.appendChild(content);\r\n\r\n\treturn li;\r\n}\r\n\r\n/**\r\n * Handle form submission\r\n */\r\nhandleFormSubmit = () => {\r\n\tconst name = document.getElementById('review-name').value;\r\n\r\n\tconst ratingSelect = document.getElementById('review-rating');\r\n\tconst rating = ratingSelect[ratingSelect.selectedIndex].value;\r\n\r\n\tconst comments = document.getElementById('review-comments').value;\r\n\r\n\tif(reviewID){\r\n\t\tcreateReview({\r\n\t\t\t'restaurant_id': self.id,\r\n\t\t\t'name': name,\r\n\t\t\t'rating': rating,\r\n\t\t\t'comments': comments\r\n\t\t});\r\n\t}else{\r\n\t\tupdateReview(self.reviewID, {\r\n\t\t\t'name': name,\r\n\t\t\t'rating': rating,\r\n\t\t\t'comments': comments\r\n\t\t});\r\n\t}\r\n}"]}