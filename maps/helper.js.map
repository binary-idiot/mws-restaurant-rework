{"version":3,"names":[],"mappings":"","sources":["helper.js"],"sourcesContent":["class Helper {\r\n\r\n\t/**\r\n\t * get url for the specified restaurant\r\n\t * @param  {Json} restaurant restaurant to get url for\r\n\t * @return {String}            The url of the restaurant as a string\r\n\t */\r\n\tstatic urlForRestaurant(restaurant){\r\n\t\treturn (`./restaurant.html?id=${restaurant.id}`);\r\n\t}\r\n\r\n\t/**\r\n\t * get url for the restaurants img\r\n\t * @param  {Json} restaurant   The restaurant to get the img for\r\n\t * @return {String}            The url of the img as a string\r\n\t */\r\n\tstatic imageUrlForRestaurant(restaurant){\r\n\t\treturn (`/img/${restaurant.photograph}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Add marker for restaurant to map\r\n\t * @param  {Json} restaurant The restaurant to add to the map\r\n\t * @param  {Map} map        The map to add marker to\r\n\t * @return {Marker}           The marker that was added\r\n\t */\r\n\tstatic mapMarkerForRestaurant(restaurant, map) {\r\n    // https://leafletjs.com/reference-1.3.0.html#marker  \r\n\t\tconst marker = new L.marker([restaurant.latlng.lat, restaurant.latlng.lng],\r\n\t\t  {title: restaurant.name,\r\n\t\t  alt: restaurant.name,\r\n\t\t  url: Helper.urlForRestaurant(restaurant)\r\n\t\t  })\r\n\t\t  marker.addTo(newMap);\r\n\t\treturn marker;\r\n  } \r\n\r\n  \t/**\r\n\t * get value of url param\r\n\t * @param  {String} name param to search for\r\n\t * @param  {String} url  url to search\r\n\t * @return {String}      Value of param\r\n\t */\r\n\tstatic getParameterByName(name, url){\r\n\t  if (!url) url = window.location.href;\r\n\t    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n\t    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n\t        results = regex.exec(url);\r\n\t    if (!results) return null;\r\n\t    if (!results[2]) return '';\r\n\t    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n\t}\r\n\r\n}\r\n"],"file":"../js/helper.js"}